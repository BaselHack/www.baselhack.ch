name: Pull Request  | CI | PEST

on: pull_request

jobs:
  ci_pest:
    runs-on: ${{ matrix.os }}
    name: pull-request | ci | pest

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.2 ]
        node: [ 16 ]

    steps:
      - name: set timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Zurich"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Setup node env üèó
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}

      - name: Setup php env
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, fileinfo, mysql, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick

      - name: Prepare the environment
        run: cp .env.ci .env

      # Frontend dependencies
      - name: Install assets
        run: cp vite.config.js.example vite.config.js

      # Backend Dependencies
      - name: Apply Nova license
        run: composer config http-basic.nova.laravel.com ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_LICENSE_KEY }}
      - name: Install Composer dependencies
        run: composer install -q --no-progress --prefer-dist --no-interaction --optimize-autoloader --no-scripts

      # Frontend dependencies
      - name: Install dependencies & build assets
        run: npm install && npm run build

      # Prepare Backend
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE laravel character set UTF8mb4 collate utf8mb4_bin;"

        # Artisan commands
      - name: Publish Laravel Nova Assets
        run: php artisan vendor:publish --tag=nova-assets --ansi --force
      - name: Publish Laravel Horizon Assets
        run: php artisan vendor:publish --tag=horizon-assets --force
      - name: Run Migration
        run: php artisan migrate:fresh

      # Backend tests
      - name: Execute PHPUnit Test
        run: php artisan test

      # Store logs
      - name: Store Log Artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Store report artifacts
          path: ./storage/logs
