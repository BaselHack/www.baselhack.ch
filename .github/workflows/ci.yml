name: Pull Request  | CI

on: pull_request

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.0 ]
        node: [ 14 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Setup php env
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, fileinfo, mysql, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick

      - name: Prepare the environment
        run: cp .env.ci .env

      # Backend Dependencies
      - name: Apply Nova license
        run: composer config http-basic.nova.laravel.com ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_LICENSE_KEY }}
      - name: Install Composer dependencies
        run: composer install -q --no-progress --prefer-dist --no-interaction --no-suggest --optimize-autoloader --no-scripts

      # Prepare backend
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE cypress character set UTF8mb4 collate utf8mb4_bin;"
      - name: Generate app key
        run: php artisan key:generate
      - name: Publish Nova Assets
        run: php artisan nova:publish
      - name: Clear Config
        run: php artisan config:clear

      # Frontend dependencies

      - name: Install dependencies 👨🏻‍💻
        run: npm install
      - name: Build assets 👷‍♂️
        run: npm run prod

      # Backend tests
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test

      # Store storage/logs
      - name: Store Storage Log Artifacts
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: Logs
          path: ./storage/logs
