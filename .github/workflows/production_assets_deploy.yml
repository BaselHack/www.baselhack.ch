name: production | assets & deploy

on:
  push:
    branches:
      - production

jobs:
  assets:
    name: production | assets

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.0 ]
        node: [ 14 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup node env üèó
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Setup php env
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, fileinfo, mysql, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick

      - name: Prepare the environment
        run: cp .env.ci .env

      # Backend dependencies
      - name: Apply Nova license & install Composer dependencies
        run: |
          composer config http-basic.nova.laravel.com ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_PASSWORD }}
          composer install --prefer-dist --no-progress --no-interaction --no-suggest --optimize-autoloader --no-cache --no-scripts

      - name: Generate app key
        run: php artisan key:generate

      # Frontend dependencies
      - name: Install dependencies üë®üèª‚Äçüíª
        run: npm install
      - name: Build assets üë∑‚Äç‚ôÇÔ∏è
        run: npm run prod

      - name: Publish Nova Assets
        run: php artisan nova:publish

      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: publish production assets
        env:
          APP_ENV: ${{ steps.vars.outputs.short_ref }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PRODUCTION_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PRODUCTION_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_PRODUCTION_DEFAULT_REGION }}
          AWS_BUCKET: ${{ secrets.AWS_PRODUCTION_BUCKET }}
        run: php artisan lasso:publish --no-git

  deploy:
    needs: assets
    runs-on: ubuntu-latest
    name: production | deploy
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Deploy to production
        env:
          ENVOYER_HOOK_PRODUCTION: ${{ secrets.ENVOYER_HOOK_PRODUCTION }}
        run: curl "$ENVOYER_HOOK_PRODUCTION"?sha=${{ github.sha }}
